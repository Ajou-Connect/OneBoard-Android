# This is a basic workflow to help you get started with Actions

name: Android CI - debug mode

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date + '%Y-%m-%d')"
          
#       - name: Build debug APK
#         run: bash ./gradlew assembleDebug --stacktrace
        
#       - name: Upload APK
#         uses: actions/upload-artifact@v1
#         with:
#           name: app
#           path: app/build/outputs/apk/debug
      
      - name: Build Release APK
        run: bash ./gradlew assembleRelease --stacktrace
        
      - run: './gradlew assembleRelease'
      
      - uses: MeilCli/slack-upload-file@v1.4.9
        with:
          slack_token: ${{ secrets.SLACK_READ_WRITE_TOKEN }}
          channels: ${{ secrets.SLACK_CHANNEL_DEPLOY }}
          file_path: 'app/build/outputs/apk/release/app-release-unsigned.apk'
          file_name: 'app-release-unsigned.apk'
          file_type: 'apk'
          initial_comment: '${{ github.ref }} 앱 슬랙 배포 성공'


      - name: Apk artifact 업로드
        uses: actions/upload-artifact@v2
        with:
          name: app-release-unsigned.apk
          path: app/build/outputs/apk/release/app-release-unsigned.apk
      
      - name: action-slack
        uses: 8398a7/action-slack@v3.8.0
        with:
          status: ${{ job.status }}
          author_name: 빌드 알림
        env:
           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
